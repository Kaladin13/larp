program: expression+

?expression : atomic
           | if_expression
           | function
           | invokable

atomic : symbol
       | integer
       | string


function : "(" "defn" fun_name "(" args ")" fun_body ")"

fun_name : symbol
fun_body : expression+

invokable : "(" control args ")"
args : expression*

if_expression : "(" "if" condition if_body else_body? ")"
condition : expression
if_body : expression
else_body : expression

!control : "=="
        | "-"
        | "+"
        | "%"
        | "set"
        | "read"
        | "print"
        | "ret"
        | symbol

symbol : NAME
integer : SIGN? DEC_NUMBER
string : STRING

SIGN : "-" | "+"

%import python (NAME, STRING, DEC_NUMBER)
%import common (WS)
%ignore WS